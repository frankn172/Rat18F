Output:
token		lexeme
identifier	[*
identifier	this
identifier	is
identifier	comment
identifier	for
identifier	this
identifier	sample
identifier	code
identifier	which
identifier	converts
identifier	Fahrenheit
identifier	into
identifier	Celcius
identifier	*]
keyword		function
identifier	convert1x
identifier	(fahr
separator	:
identifier	int)
identifier	{
keyword		return
integer		5
operator	*
identifier	(fahr
operator	-
identifier	32)
operator	/
identifier	9;
identifier	}
separator	$$
keyword		int
identifier	low,
identifier	high,
identifier	step;
identifier	[*
identifier	declarations
identifier	*]
keyword		get
identifier	(low,
identifier	high,
identifier	step);
keyword		while
identifier	(low
operator	<
identifier	high
separator	)
identifier	{
keyword		put
identifier	(low);
keyword		put
identifier	(convert1x
identifier	(low));
identifier	low
operator	=
identifier	low
operator	+
identifier	step;
identifier	}
keyword		whileend
separator	$$
